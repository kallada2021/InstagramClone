version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    # command: /Start
      args:
       - DEV=true
    container_name: api
    volumes:
      - .:/app
      - static-volume:/app/staticfiles
      - media-volume:/app/mediafiles
    expose:
      - "8000"
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=postgres
      - DB_NAME=devdb
      - DB_USER=postgres
      - DB_PASS=changeme
    # env_file:
      # - ./.env
    depends_on:
      - postgres
    networks:
      - instagram-clone

  postgres:
    image: postgres:13.4-alpine
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: devdb
    networks:
      - instagram-clone
    volumes:
      - dev-db-data:/var/lib/postgresql/data

  nginx:
    restart: always
    depends_on:
      - api
    volumes:
      - static-volume:/app/staticfiles
      - media-volume:/app/mediafiles
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - instagram-clone



networks:
  instagram-clone:
    driver: bridge

volumes:
  static-volume:
  media-volume:
  dev-db-data:
